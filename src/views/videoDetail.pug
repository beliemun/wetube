extends layouts/main
include mixins/videoPlayer

block content
    include partials/requiredModal
    .main
        .video__container
            +videoPlayer({
                videoFileUrl:video.videoFileUrl,
                posterFileUrl: video.posterFileUrl
            })
            .video__header
                h5.video__title=video.title
                .video__seperator
                .video__author
                    img.video__author-avatar(src=video.creator.avatarUrl)
                    span.video__author-name
                        a(href=routes.userDetail(video.creator.id))=video.creator.name
                    if (loggedUser && video.creator) && video.creator.id === loggedUser.id
                        a.video__edit-btn.btn.btn--outline(href=routes.editVideo(video.id)) Edit Video
                .video__info
                    span#jsViewNumber #{video.views} 
                    span="⠀views⠀"
                    sapn #{(video.createdAt).toISOString().slice(0,10)}
                .video__seperator
                    pre.video__description#jsDescription=video.description
        .comment__container
            .video__comments
                span.video__comment-number
                    span#jsCommentNumber #{video.comments.length}
                    if video.comments.length > 1
                        |    comments
                    else
                        |    comment
            form.comment__form#jsAddComment
                input.comment__input(type="text" placeholder="Add a comment")
                input.comment__submit.btn.btn--color(type="submit" value="Enter")
            ul.comoment__list#jsCommentList
                each comment in video.comments.reverse()
                    li.comment__item(id=comment.id)
                        a(href=routes.userDetail(`${comment.creator}`))
                            img.comment__avatar(src=comment.avatarUrl)
                        .comment__content
                            a.comment__title(href=routes.userDetail(`${comment.creator}`))
                                span.comment__name #{comment.name}
                                span.comment__created-at #{(comment.createdAt).toISOString().slice(5,10)}
                            .comment__text
                                p #{comment.text}
                                if loggedUser && (`${comment.creator}` === loggedUser.id)
                                    button.comment__delete X





